# keyboards/keyboards.py
"""
–ü—Ä–æ—Å—Ç—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List
import config.settings as settings

def game_selection() -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –∏–≥—Ä—ã"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÆ Dota 2", callback_data="game_dota")],
        [InlineKeyboardButton(text="üî´ CS2", callback_data="game_cs")]
    ])

def main_menu(has_profile: bool = False, current_game: str = None) -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    buttons = []
    
    if has_profile:
        buttons.extend([
            [InlineKeyboardButton(text="üë§ –ú–æ—è –∞–Ω–∫–µ—Ç–∞", callback_data="view_profile")],
            [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_profile")],
            [InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫", callback_data="search")],
            [InlineKeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫–∏", callback_data="my_likes")],
            [InlineKeyboardButton(text="üíñ –ú–∞—Ç—á–∏", callback_data="my_matches")],
            [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="delete_profile")]
        ])
    else:
        buttons.append([InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É", callback_data="create_profile")])
    
    # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏–≥—Ä—ã
    if current_game:
        other_game = "cs" if current_game == "dota" else "dota"
        other_name = settings.GAMES[other_game]
        buttons.append([InlineKeyboardButton(text=f"üîÑ {other_name}", callback_data=f"switch_{other_game}")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def ratings(game: str) -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä —Ä–µ–π—Ç–∏–Ω–≥–∞"""
    buttons = []
    for key, name in settings.RATINGS[game].items():
        buttons.append([InlineKeyboardButton(text=name, callback_data=f"rating_{key}")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def positions(game: str, selected: List[str] = None) -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –ø–æ–∑–∏—Ü–∏–π"""
    if selected is None:
        selected = []
    
    buttons = []
    for key, name in settings.POSITIONS[game].items():
        if key in selected:
            text = f"‚úÖ {name}"
            callback = f"pos_remove_{key}"
        else:
            text = f"‚ùå {name}"
            callback = f"pos_add_{key}"
        
        buttons.append([InlineKeyboardButton(text=text, callback_data=callback)])
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    buttons.append([InlineKeyboardButton(text="‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ", callback_data="separator")])
    
    if selected:
        buttons.append([InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="pos_done")])
    else:
        buttons.append([InlineKeyboardButton(text="‚ö†Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é", callback_data="pos_need")])
    
    buttons.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def search_filters() -> InlineKeyboardMarkup:
    """–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üèÜ –†–µ–π—Ç–∏–Ω–≥", callback_data="filter_rating")],
        [InlineKeyboardButton(text="‚öîÔ∏è –ü–æ–∑–∏—Ü–∏—è", callback_data="filter_position")],
        [InlineKeyboardButton(text="üîç –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫", callback_data="start_search")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def profile_actions(user_id: int) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–æ—Ñ–∏–ª–µ–º –≤ –ø–æ–∏—Å–∫–µ"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üëé –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_{user_id}"),
            InlineKeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫", callback_data=f"like_{user_id}")
        ],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def like_actions(user_id: int) -> InlineKeyboardMarkup:
    """–î–µ–π—Å—Ç–≤–∏—è —Å –ª–∞–π–∫–æ–º"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚ù§Ô∏è –õ–∞–π–∫ –≤ –æ—Ç–≤–µ—Ç", callback_data=f"like_back_{user_id}"),
            InlineKeyboardButton(text="üëé –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data=f"skip_like_{user_id}")
        ],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def skip_photo() -> InlineKeyboardMarkup:
    """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ñ–æ—Ç–æ"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="skip_photo")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ])

def confirm_delete() -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data="confirm_delete"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="main_menu")
        ]
    ])

def back() -> InlineKeyboardMarkup:
    """–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ])

def contact(username: str = None) -> InlineKeyboardMarkup:
    """–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    buttons = []
    
    if username:
        buttons.append([InlineKeyboardButton(text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å", url=f"https://t.me/{username}")])
    
    buttons.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)