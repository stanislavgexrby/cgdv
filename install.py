import os
import sys
import subprocess
from pathlib import Path
import shutil

def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    if sys.version_info < (3, 8):
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        print(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤–µ—Ä—Å–∏—è: {sys.version}")
        return False

    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} –Ω–∞–π–¥–µ–Ω")
    return True

def create_virtual_env():
    """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    venv_path = Path("venv")

    if venv_path.exists():
        print("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True

    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    try:
        subprocess.run([sys.executable, "-m", "venv", "venv"], check=True)
        print("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False

def get_pip_command():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã pip –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    if os.name == 'nt':  # Windows
        return str(Path("venv/Scripts/pip.exe"))
    else:  # Linux/macOS
        return str(Path("venv/bin/pip"))

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")

    pip_cmd = get_pip_command()

    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º pip
        subprocess.run([pip_cmd, "install", "--upgrade", "pip"], check=True)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        subprocess.run([pip_cmd, "install", "-r", "requirements.txt"], check=True)

        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return False

def create_env_file():
    """–°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞"""
    env_path = Path(".env")
    env_example_path = Path(".env.example")

    if env_path.exists():
        print("‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return True

    if not env_example_path.exists():
        print("‚ö†Ô∏è  –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π .env")

        env_content = """
            # TeammateBot Configuration
            BOT_TOKEN=your_bot_token_here
            ADMIN_ID=123456789
            DOTA_CHANNEL_ID=@your_dota_channel
            CS_CHANNEL_ID=@your_cs_channel
            CHECK_SUBSCRIPTION=false
            DATABASE_PATH=data/teammates.db
        """

        try:
            with open(env_path, 'w', encoding='utf-8') as f:
                f.write(env_content)
            print("‚úÖ –ë–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª .env —Å–æ–∑–¥–∞–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
            return False
    else:
        try:
            shutil.copy(env_example_path, env_path)
            print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ .env.example")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞: {e}")
            return False

    print("")
    print("üîß –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env –∏ —É–∫–∞–∂–∏—Ç–µ:")
    print("   - BOT_TOKEN (–ø–æ–ª—É—á–∏—Ç–µ —É @BotFather)")
    print("   - ADMIN_ID (–≤–∞—à Telegram ID –æ—Ç @userinfobot)")
    print("   - DOTA_CHANNEL_ID (–∫–∞–Ω–∞–ª –¥–ª—è Dota 2)")
    print("   - CS_CHANNEL_ID (–∫–∞–Ω–∞–ª –¥–ª—è CS2)")
    print("")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üéÆ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TeammateBot")
    print("=" * 40)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python
    if not check_python_version():
        return False

    # –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not create_virtual_env():
        return False

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not install_dependencies():
        return False

    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    create_env_file()

    print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞:")

    if os.name == 'nt':  # Windows
        print("   python main.py")
    else:  # Linux/macOS
        print("   python main.py")

    return True

if __name__ == "__main__":
    try:
        success = main()
        if not success:
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)